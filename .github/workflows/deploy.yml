name: Go Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # You can also use windows-latest or macos-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up Go (This installs Go and ensures it's available for subsequent steps)
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.19'  # Replace with your desired Go version (for example, '1.19')

    # Step 3: Cache Go modules to speed up builds
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    # Step 4: Run `go mod tidy` to clean up the go modules
    - name: Go mod tidy
      run: go mod tidy

    # Step 5: Build the Go binary
    - name: Build
      run: go build -o app .

    # Step 6: Deploy your binary (you can customize this step based on your deployment needs)
    - name: Deploy to Koyeb
      run: ./app
